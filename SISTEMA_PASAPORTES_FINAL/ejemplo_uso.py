#!/usr/bin/env python3
"""
Ejemplo de Uso del Sistema de Pasaportes
Muestra c√≥mo usar el sistema paso a paso
"""

import os
import sys
from pathlib import Path

# Agregar el directorio SCRIPTS al path
sys.path.append(str(Path(__file__).parent / "SCRIPTS"))

def ejemplo_basico():
    """Ejemplo b√°sico de uso del sistema"""
    print("üöÄ EJEMPLO DE USO DEL SISTEMA DE PASAPORTES")
    print("=" * 60)
    
    try:
        # Importar el script maestro
        from script_maestro_integrado import ScriptMaestroIntegrado
        
        # Inicializar el sistema
        print("1Ô∏è‚É£ Inicializando sistema...")
        maestro = ScriptMaestroIntegrado()
        
        # Verificar que hay im√°genes disponibles
        imagenes_dir = Path("DATA/Imagenes_OK")
        if not imagenes_dir.exists():
            print("‚ùå Error: Directorio DATA/Imagenes_OK no encontrado")
            print("üìã Soluci√≥n: Crear el directorio y colocar im√°genes originales")
            return False
        
        # Buscar im√°genes
        imagenes = []
        for subdir in imagenes_dir.iterdir():
            if subdir.is_dir():
                for img_file in list(subdir.glob('*.png')) + list(subdir.glob('*.jpg')) + list(subdir.glob('*.jpeg')):
                    imagenes.append(img_file)
        
        if not imagenes:
            print("‚ùå Error: No se encontraron im√°genes en DATA/Imagenes_OK/")
            print("üìã Soluci√≥n: Colocar im√°genes originales en el directorio")
            return False
        
        print(f"‚úÖ Encontradas {len(imagenes)} im√°genes")
        
        # Ejecutar el sistema
        print("2Ô∏è‚É£ Ejecutando sistema de generaci√≥n de pasaportes...")
        exito = maestro.crear_plantillas_integradas()
        
        if exito:
            print("‚úÖ ¬°Sistema ejecutado exitosamente!")
            print("üìÅ Revisar resultados en OUTPUT/plantillas_integradas/")
            return True
        else:
            print("‚ùå Error ejecutando el sistema")
            return False
            
    except ImportError as e:
        print(f"‚ùå Error importando m√≥dulos: {e}")
        print("üìã Soluci√≥n: Ejecutar 'python3 instalar.py' primero")
        return False
    except Exception as e:
        print(f"‚ùå Error inesperado: {e}")
        return False

def ejemplo_con_imagen_especifica():
    """Ejemplo usando una imagen espec√≠fica"""
    print("\nüéØ EJEMPLO CON IMAGEN ESPEC√çFICA")
    print("=" * 40)
    
    try:
        from script_maestro_integrado import ScriptMaestroIntegrado
        
        # Inicializar sistema
        maestro = ScriptMaestroIntegrado()
        
        # Buscar primera imagen disponible
        imagenes_dir = Path("DATA/Imagenes_OK")
        imagen_ejemplo = None
        
        for subdir in imagenes_dir.iterdir():
            if subdir.is_dir():
                for img_file in list(subdir.glob('*.png')) + list(subdir.glob('*.jpg')):
                    imagen_ejemplo = img_file
                    break
            if imagen_ejemplo:
                break
        
        if not imagen_ejemplo:
            print("‚ùå No se encontr√≥ imagen de ejemplo")
            return False
        
        print(f"üì∏ Usando imagen: {imagen_ejemplo.name}")
        
        # Generar pasaporte espec√≠fico
        gafete = maestro.generar_gafete_integrado(str(imagen_ejemplo), "123456789")
        
        if gafete:
            # Guardar resultado
            output_dir = Path("OUTPUT/plantillas_integradas")
            output_dir.mkdir(parents=True, exist_ok=True)
            
            output_path = output_dir / "ejemplo_pasaporte_especifico.png"
            gafete.save(output_path, 'PNG', dpi=(300, 300))
            
            print(f"‚úÖ Pasaporte generado: {output_path}")
            return True
        else:
            print("‚ùå Error generando pasaporte")
            return False
            
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return False

def verificar_estructura():
    """Verifica que la estructura del sistema est√© completa"""
    print("üîç VERIFICANDO ESTRUCTURA DEL SISTEMA")
    print("=" * 45)
    
    archivos_requeridos = [
        "SCRIPTS/script_maestro_integrado.py",
        "CONFIG/config_desde_ejemplo_ISABELALVAREZRAMIREZ5@hotmail.com_P√°gina_1_Imagen_0001.json",
        "Plantillas_analisis/PASAPORTE-VENEZUELA-CLEAN.png",
        "TEMPLATE/Fuentes Extras/Arial.ttf",
        "TEMPLATE/Fuentes Extras/BrittanySignature.ttf",
        "TEMPLATE/Fuentes Extras/OCR-B10PitchBT Regular.otf",
        "TEMPLATE/Fuentes Extras/Pasaport Numbers Front-Regular.ttf"
    ]
    
    todos_ok = True
    
    for archivo in archivos_requeridos:
        if Path(archivo).exists():
            print(f"‚úÖ {archivo}")
        else:
            print(f"‚ùå {archivo} - FALTANTE")
            todos_ok = False
    
    if todos_ok:
        print("‚úÖ Estructura completa")
    else:
        print("‚ùå Estructura incompleta")
    
    return todos_ok

def main():
    """Funci√≥n principal"""
    print("üìö EJEMPLOS DE USO DEL SISTEMA DE PASAPORTES")
    print("=" * 60)
    
    # Cambiar al directorio del script
    script_dir = Path(__file__).parent
    os.chdir(script_dir)
    
    # 1. Verificar estructura
    if not verificar_estructura():
        print("\n‚ùå Sistema incompleto. Ejecutar 'python3 instalar.py' primero")
        return False
    
    # 2. Ejemplo b√°sico
    if not ejemplo_basico():
        print("\n‚ùå Error en ejemplo b√°sico")
        return False
    
    # 3. Ejemplo con imagen espec√≠fica
    if not ejemplo_con_imagen_especifica():
        print("\n‚ùå Error en ejemplo espec√≠fico")
        return False
    
    print("\nüéâ ¬°TODOS LOS EJEMPLOS EJECUTADOS EXITOSAMENTE!")
    print("üìÅ Revisar resultados en OUTPUT/plantillas_integradas/")
    
    return True

if __name__ == "__main__":
    try:
        exito = main()
        sys.exit(0 if exito else 1)
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è  Ejecuci√≥n cancelada por el usuario")
        sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå Error inesperado: {e}")
        sys.exit(1)
